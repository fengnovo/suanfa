
一、什么是链表
	1．多个元素存储的列表
	2.链表中的元素在内存中不是顺序存储的，而是通过"next"指针联系在一起的。
	
	***js中的原型链 原理就是 链表结构
二、链表和数组的区别
	1．数组：有序存储的，在中间某个位置删除或者添加某个元素，其他元素要跟着动。
	2.链表中的元素在内存中不是顺序存储的，而是通过"next"指针联系在一起的。
三、链表
	单向链表




排序：冒泡排序、快速排序、插入排序...
搜索：二分搜索、顺序搜索...
工具地址：https://visualgo.net/zh

动态规划： DP
	把分支优化了【重复的问题，单独保存起来】
分治：
	子问题都是独立的

	一个大问题，分成多个小问题，递归解决小问题，将结
	果合并从而来解决原来的问题。


一、堆是什么？
堆都能用树来表示，并且一般树的实现都是利用链表。
而二叉堆是一种特殊的堆，它用完全工叉树表示，却可以利用数组实现。
平时使用最多的是二叉堆，它可以用完全二叉树表示，二叉堆易于存储，并且便于索引
***堆数据结构像树，但是，是通过数组来实现的 （不是通过链表：二叉堆)

二、在堆的实现时，需要注意
因为是数组，所以父子节点的关系就不需要特殊的结构去维护了，索引之间通过计算
就可以得到，省掉了很多麻烦。如果是链表结构，就会复杂很多；
完全二叉树要求叶子节点从左往右填满，
才能开始填充下一层，这就保证了不需要对数组整体进行大片的移动。
这也是随机存储结构（数组）的短板：删除一个元素之后整体往前移是比较费时的。
这个特性也导致堆在删除元素的时候，要把最后一个叶子节点补充到树根节点的缘由

二叉堆想树的样子我可以理解，但将它们安排在数组里的话，通过当前下标怎么就能
找到父节点和子节点呢？

左: 		2* index +1
右: 		2* index +2
找父: 	( index-1 ) / 2



一、栈、队列：进、出
二、链表、数组：多个元素存储组成的
	区别一
		数组：下标
		链表：next指针联系在一起
	区别二：数据插入
		数组：如果在中间插入新的元素，其他元素会重新计算
		链表：不会重新计算，说白了是赋值或者替换的一种感觉
	区别三：查找
		数组：通过下标进行查找即可
		链表：每次查找都需要从头开始找


一、深度优先搜索（遍历) DSF
从根出发，尽可能深的搜索树的节点
技巧：
	1. 访问根节点
	2. 对根节点的children挨个进行深度优先搜索
二、广度优先搜索（遍历）BSF
从根出发，优先访问离根节点最近的节点
技巧：
	1. 新建一个队列，把根节点入队
	2. 把队头出队
	3. 把队头的children挨个入队
	4. 重复2和3步，直到队列为空位置








